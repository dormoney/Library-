// <auto-generated />
using System;
using Library.DataBaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(LibraryDB))]
    partial class LibraryDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Model.Books", b =>
                {
                    b.Property<int>("Id_book")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_book"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Copies")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_genre")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year_public")
                        .HasColumnType("int");

                    b.HasKey("Id_book");

                    b.HasIndex("Id_genre");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Library.Model.Genres", b =>
                {
                    b.Property<int>("Id_genre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_genre"));

                    b.Property<string>("Name_genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_genre");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Library.Model.Readers", b =>
                {
                    b.Property<int>("Id_reader")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_reader"));

                    b.Property<int>("Birth_year")
                        .HasColumnType("int");

                    b.Property<string>("Contact_info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_reader");

                    b.ToTable("Readers");
                });

            modelBuilder.Entity("Library.Model.Rent_story", b =>
                {
                    b.Property<int>("Id_rent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_rent"));

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_book")
                        .HasColumnType("int");

                    b.Property<int>("Id_reader")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_rent");

                    b.HasIndex("Id_book");

                    b.HasIndex("Id_reader");

                    b.ToTable("Rent_story");
                });

            modelBuilder.Entity("Library.Model.Books", b =>
                {
                    b.HasOne("Library.Model.Genres", "Genres")
                        .WithMany()
                        .HasForeignKey("Id_genre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("Library.Model.Rent_story", b =>
                {
                    b.HasOne("Library.Model.Books", "Books")
                        .WithMany()
                        .HasForeignKey("Id_book")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Model.Readers", "Readers")
                        .WithMany()
                        .HasForeignKey("Id_reader")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");

                    b.Navigation("Readers");
                });
#pragma warning restore 612, 618
        }
    }
}
